spring:
  application:
    name: account-service

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://database-user-service:5432/postgres
    username: postgres
    password: root

  liquibase:
    enabled: true

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
  kafka:
    bootstrap-servers: broker:29092
    producer:
      keySerializer: "org.apache.kafka.common.serialization.UUIDSerializer"
      valueSerializer: "io.confluent.kafka.serializers.KafkaAvroSerializer"
      properties:
        schema:
          registry:
            url: http://schema-registry:8081
    consumer:
      group-id: client-mail-service-group
      keyDeserializer: "org.apache.kafka.common.serialization.UUIDDeserializer"
      valueDeserializer: "io.confluent.kafka.serializers.KafkaAvroDeserializer"
      properties:
        schema:
          registry:
            url: http://schema-registry:8081
        specific:
          avro:
            reader: "true"
kafka:
  topic:
    transaction: transaction_topic
avro:
  topic:
    name:
      transaction: transaction_topic
      debit_operation: debit_operation_topic
      credit_operation: credit_operation_topic
      internal_operation: internal_operation_topic

avro:
  topic:
    name:
      transaction: transaction_topic
      
eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://discovery-server:8761/eureka
openapi:
 service:
   version: 1.0.0
   name: ${spring.application.name}
   description: "Responsible for managing accounts" #api gateway url
   url: http://localhost:8072
springdoc:
 api-docs:
   path: /account-service/v3/api-docs #these urls will used to load the swagger ui of this service by the api gateway
 swagger-ui:
   path: /account-service/swagger-ui.html

---

management:
  endpoints:
    web:
      exposure:
        include: '*'
